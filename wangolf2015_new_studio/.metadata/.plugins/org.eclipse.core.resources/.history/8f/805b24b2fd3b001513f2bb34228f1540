package me.wangolf.adapter;

import java.util.ArrayList;
import java.util.Collections;
import java.util.LinkedList;
import java.util.List;

import com.meigao.mgolf.R;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import me.wangolf.bean.practice.PracDetailEntity_new;
import me.wangolf.bean.practice.PracDistriEntity;
import me.wangolf.practice.PracticeInfoActivity;
import me.wangolf.utils.ComparatorUtils;

public class PracDistributorListAdapter extends BaseAdapter {

    private LayoutInflater inflater;
    private boolean isFling;
    private ListView listView;
    private Context context;
    private String rgid;
    private boolean isprac_d_title_1;// 控
    private boolean isprac_d_title_3;// 控
    private List<PracDetailEntity_new.DataEntity.DistributorsEntity> list = new ArrayList<PracDetailEntity_new.DataEntity.DistributorsEntity>();
    private PracticeInfoActivity activity;
    private PracDistriEntity bean_1;
    private PracDistriEntity bean_2;

    public boolean isFling() {
        return isFling;
    }

    public void setFling(boolean isFling) {
        this.isFling = isFling;
    }

    public PracDistributorListAdapter(Context context) {
        this.activity = (PracticeInfoActivity) context;
        this.context = context;
    }

    public List<PracDetailEntity_new.DataEntity.DistributorsEntity> getList() {
        return list;
    }

    public void setList(List<PracDetailEntity_new.DataEntity.DistributorsEntity> list) 
    {

        this.list = list;
        

    }

    @Override
    public int getCount() {
        return list == null ? 0 : list.size();
    }

    @Override
    public Object getItem(int arg0) {
        // TODO Auto-generated method stub
        return list.get(arg0);
    }

    @Override
    public long getItemId(int arg0) {
        return arg0;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) 
    {

        // 加载或复用item界面
        ViewHolder holder = null;
        
        if (convertView == null) 
        {
            // 无可复用item界面，加载新界面
            convertView = View.inflate(context, R.layout.item_prac_distributor, null);
            
            holder = new ViewHolder();
            
            holder.tvDName = (TextView) convertView.findViewById(R.id.item_dname);
            
            holder.tvballcount = (TextView) convertView.findViewById(R.id.item_service);
            
            holder.tvOrder = (TextView) convertView.findViewById(R.id.item_order);
            
            holder.prac_d_title = (LinearLayout) convertView.findViewById(R.id.prac_d_title);
            
            holder.prca_l_title = (TextView) convertView.findViewById(R.id.prca_l_title);
            
            convertView.setTag(holder);
            
        } 
        else 
        {
            holder = (ViewHolder) convertView.getTag();
        }

        if (isFling == false) 
        {
            // 获取指定位置的数据
            PracDistriEntity bean = (PracDistriEntity) getItem(position);

            // 给预定设置监听
            // holder.tvOrder.setOnClickListener(new
            // OrderOnClickListener(bean));

            // 绑定数据到item界面
            holder.tvOrder.setOnClickListener(new onClick(bean));
            
            String type = bean.getPrice_type() + "";
            
            if ("00".equals(type)) 
            {
                // holder.tvDName.setText("金牌会员");
                // holder.tvballcount.setText("时效：" + bean.getDatecount());
                // holder.tvOrder.setText("下单 >");
            } 
            else if ("1".equals(type) | "2".equals(type)|1==1) 
            {
                //原来使用了0 1 2 3 type 现在默认全显示
                if (!isprac_d_title_1) 
                {
                    // holder.prac_d_title.setVisibility(View.VISIBLE);
                    holder.prca_l_title.setText("打球会员价");
                    
                    isprac_d_title_1 = true;
                }
                
                holder.tvDName.setText(bean.getPrice_tag());
                
                holder.tvballcount.setText(bean.getPrice_description());
                
                String price = String.valueOf(bean.getPrice());
                
                if (price.equals("0")) 
                {
                    holder.tvOrder.setText("暂不提供在线购买");
                } 
                else 
                {
                    holder.tvOrder.setText("购买");
                }

            } 
            else if ("03".equals(type)) {
//                if (!isprac_d_title_3) {
//                    // holder.prac_d_title.setVisibility(View.VISIBLE);
//                    holder.prca_l_title.setText("球场直通价");
//                    isprac_d_title_3 = true;
//                }
//                holder.tvDName.setText(bean.getPrice_tag());
//                holder.tvballcount.setText(bean.getPrice_description());
//                String price = String.valueOf(bean.getPrice());
//                if (price.equals("0")) {
//                    holder.tvOrder.setText("暂不提供在线购买");
//                } else {
//                    holder.tvOrder.setText("购买 >");
//                }

            }

            // 加载图片
        }
        // 返回item界面
        return convertView;
    }

    class ViewHolder {
        private TextView tvDName;
        private TextView tvballcount;
        private TextView tvOrder;
        private LinearLayout prac_d_title;
        private TextView prca_l_title;
    }

    class onClick implements View.OnClickListener {
        private PracDistriEntity bean;

        public onClick(PracDistriEntity bean) {
            super();
            this.bean = bean;
        }

        @Override
        public void onClick(View v) {
            switch (v.getId()) {
                case R.id.item_order:
                    activity.toBuyPractice(bean);
                    break;
                default:
                    break;
            }
        }
    }

}
