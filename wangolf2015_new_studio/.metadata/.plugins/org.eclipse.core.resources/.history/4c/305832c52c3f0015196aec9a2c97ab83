package me.wangolf.shop;

import android.app.Activity;
import android.app.Dialog;
import android.content.Intent;
import android.graphics.Paint;
import android.os.Bundle;
import android.support.v4.view.ViewPager.LayoutParams;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.lidroid.xutils.ViewUtils;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.meigao.mgolf.R;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.Serializable;
import java.util.ArrayList;

import me.wangolf.ConstantValues;
import me.wangolf.bean.shop.InfoPro;
import me.wangolf.factory.ServiceFactory;
import me.wangolf.service.IOAuthCallBack;
import me.wangolf.usercenter.LoginActivity;
import me.wangolf.utils.CheckUtils;
import me.wangolf.utils.CommonUtil;
import me.wangolf.utils.DialogUtil;
import me.wangolf.utils.GsonTools;
import me.wangolf.utils.ShareUtils;
import me.wangolf.utils.ToastUtils;
import me.wangolf.utils.Xutils;
import me.wangolf.utils.viewUtils.RollViewPager_NORoll;
import me.wangolf.utils.viewUtils.RollViewPager_NORoll.OnPagerClickCallback;

public class ShopProActivity extends Activity implements OnClickListener
{

    @ViewInject(R.id.tv_infopro_name)
    private TextView tv_infopro_name; // 商品名称之
    private String proid;// 商品ID
    @ViewInject(R.id.tv_pro_pronprice)
    private TextView tv_pro_pronprice; // 现价
    @ViewInject(R.id.tv_pro_prodis)
    private TextView tv_pro_prodis;// 折扣
    @ViewInject(R.id.tv_proinfo_prooprice)
    private TextView tv_proinfo_prooprice;// 原价
    @ViewInject(R.id.tv_infopro_procount)
    private TextView tv_infopro_procount;// 数量
    @ViewInject(R.id.tv_infopro_prodetail)
    private TextView tv_infopro_prodetail; // 简介
    @ViewInject(R.id.img_datails)
    private RelativeLayout img_datails;// 图文详情
    @ViewInject(R.id.comment)
    private RelativeLayout comment;// 评论
    @ViewInject(R.id.common_back)
    private Button common_back; // 退出
    @ViewInject(R.id.common_title)
    private TextView common_title;// 标题
    @ViewInject(R.id.common_bt)
    private TextView common_bt;// 分享
    @ViewInject(R.id.bt_buy)
    private Button bt_buy; // 购买
    private String color; // 颜色
    private String size;// 尺码

    private RollViewPager_NORoll Rpage; //
    private ArrayList<View> dotList; // 链接
    @ViewInject(R.id.dots_ll)
    private LinearLayout dots_ll; // 填充滚动viewpage点
    @ViewInject(R.id.shop_viewpager)
    private LinearLayout shop_viewpager; // 滚动图
    private ArrayList<String> titles;
    private ArrayList<String> urlList = new ArrayList<String>();
    ;
    private InfoPro bean;// 实体
    private Dialog dialog;
    private String sharetitle;
    private String shareUrl;
    private String picfile;
    private String imagename;

    @Override
    protected void onCreate(Bundle savedInstanceState) 
    {
        super.onCreate(savedInstanceState);
        
        setContentView(R.layout.shop_pro_info);
        
        ViewUtils.inject(this);
        
        initData();
    }

    public void initData() 
    {
        dialog = DialogUtil.getDialog(this);
        
        dialog.show();
        
        common_title.setText(ConstantValues.SHOP_COMTENT_TITLE);// 设置标题内容
        
        common_bt.setVisibility(View.VISIBLE);
        
        common_bt.setText(ConstantValues.SHARE);// 设置分享
        
        common_back.setVisibility(View.VISIBLE);// 显示退出键
        
        tv_proinfo_prooprice.getPaint().setFlags(Paint.STRIKE_THRU_TEXT_FLAG);
        
        tv_proinfo_prooprice.getPaint().setAntiAlias(true);//
        
        common_back.setOnClickListener(this);
        
        common_bt.setOnClickListener(this);
        
        img_datails.setOnClickListener(this);
        
        bt_buy.setOnClickListener(this);
        
        proid = getIntent().getStringExtra("proid");
        
        Log.e("proid", proid);
        
        ToastUtils.showInfo(getApplicationContext(), proid);
        
        getData();

    }

    
    
    public void getData() 
    {
        try {
        	
            ServiceFactory.getShopEngineInstatice().getProInfo(proid, new IOAuthCallBack() 
            {
                @Override
                public void getIOAuthCallBack(String result) 
                {               	
                	ToastUtils.showInfo(getApplicationContext(), result);
                	
                    if (result.equals(ConstantValues.FAILURE)) 
                    {
                        ToastUtils.showInfo(ShopProActivity.this, ConstantValues.NONETWORK);// 加载内容失败                        
                    } 
                    else 
                    {
                        bean = GsonTools.changeGsonToBean(result, InfoPro.class);
                        
                        if(bean.getData().size() != 0)
                        {
                        	
                        InfoPro.DataEntity data = bean.getData().get(0);
                        
                        tv_infopro_name.setText(data.getSub_name());
                        
                        tv_pro_pronprice.setText("￥" + data.getCurrent_price());
                        
                        tv_pro_prodis.setText(data.getDiscount() + "折");
                        
                        tv_proinfo_prooprice.setText("价格：￥" + data.getOrigin_price());
                        
                        tv_infopro_procount.setText("已出售" + data.getBuy_count() + "件");
                        
                        tv_infopro_prodetail.setText(data.getBrief());
                        
                        sharetitle = data.getSub_name() + "  " + data.getDiscount() + "折" + " " + "￥" + data.getOrigin_price();
                       
                        shareUrl = data.getWeb_app_uri();
                       
                        color = data.getColor();
                        
                        size = data.getSize();
                        
                        String[] url = data.getImg_list().split(",");
                        
                        if (!CheckUtils.checkEmpty(url[0])) 
                        {
                            picfile = url[0].substring(0, url[0].lastIndexOf(".")) + "_180_180" + url[0].substring(url[0].lastIndexOf("."));
                        }

                        for (int i = 0; i < url.length; i++) 
                        {
                            String path = url[i];
                            
                            if (!CheckUtils.checkEmpty(path)) 
                            {
                                path = path.substring(0, path.lastIndexOf(".")) + "_640" + path.substring(path.lastIndexOf("."));
                            }
                            
                            urlList.add(path);
                        }
                       
                        initDot(url.length);// 初始化滚动图
                       
                        initRoll();

//                        JSONObject dataJson;
//                        
//                        try {
//                        	
//                            dataJson = new JSONObject(result);
//                            
//                            JSONArray d = dataJson.getJSONArray("data");
//                            
//                            JSONObject info = d.getJSONObject(0);
//                            
//                            JSONArray jsonProArr = info.getJSONArray("proattr");
//                            
//                            if (jsonProArr != null)
//                            {
//                                JSONObject jsonColor = (JSONObject) jsonProArr.get(0);
//                                
//                                color = jsonColor.getString("0");
//                                
//                                JSONObject jsonSize = (JSONObject) jsonProArr.get(1);
//                                
//                                size = jsonSize.getString("1");
//                            }
//
//                        } 
//                        catch (JSONException e) 
//                        {
//                            e.printStackTrace();
//                        }
                        
                        dialog.cancel();
                        }
                        else
                        {
                        	
                        	ToastUtils.showInfo(getApplicationContext(), "暂无数据！");
                        	
                        	finish();
                        	
                        }
                        
                    }
                }
            });
            
        } 
        catch (Exception e)
        {

            e.printStackTrace();
        }

    }

    @Override
    public void onClick(View v) 
    {
        switch (v.getId()) 
        {
            case R.id.common_back:
            	
                finish();// 退出
                
                break;
                
            case R.id.img_datails:
            	
                if (!"".equals(proid)) 
                {
                    Intent intent = new Intent(getApplicationContext(), ProImgDetailActivity.class);
                    
                    intent.putExtra("proid", proid);
                    
                    this.startActivity(intent);
                    
                }
                
                break;
                
            case R.id.bt_buy:
            	
                toBuy();
                
                break;
                
            case R.id.common_bt:
            	
                if (!CheckUtils.checkEmpty(picfile))
                {
                    Xutils.loadImage(picfile);
                    
                    int p = picfile.lastIndexOf("/");
                    
                    imagename = picfile.substring(p);
                }
                
                ShareUtils.showShareandUrl(sharetitle, shareUrl,this, CheckUtils.checkEmpty(imagename) ? "" : imagename);
                
                break;
                
            default:
                break;
                
        }
    }

    public void toBuy() 
    {
        if (ConstantValues.ISLOGIN)
        {
            if (!"".equals(proid) & bean != null)
            {
                Intent intent = new Intent(getApplicationContext(), ProAtrrActivity.class);
                
                intent.putExtra("bean", bean);
                
                if (!"".equals(color))
                	
                    intent.putExtra("color", color);
                
                if (!"".equals(size))
                	
                    intent.putExtra("size", size);
                
                this.startActivity(intent);
            }
        } else {
            // 登录
            Intent toLogin = new Intent(this, LoginActivity.class);
            
            toLogin.putExtra("flag", "orderPrac");
            
            startActivityForResult(toLogin, ConstantValues.ORDERPRAC);
        }
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data)
    {
        super.onActivityResult(requestCode, resultCode, data);
        
        if (data == null)
        {
            return;
        }
        
        if (requestCode == ConstantValues.ORDERPRAC)
        {
            toBuy();
        }
    }

    public void initRoll() 
    {

        // ================滚动图片数据============= 滚动图初始化数据
        Rpage = new RollViewPager_NORoll(getApplicationContext(), dotList, R.drawable.dot_focus, R.drawable.dot_normal, new OnPagerClickCallback() {
            @Override
            public void onPagerClick(int position) {
                if (urlList.size() > 0) {
                    Intent intent = new Intent(getApplicationContext(), ShopImgActivit.class);
                    intent.putStringArrayListExtra("url", urlList);
                    startActivity(intent);
                }
            }
        });
        Rpage.setLayoutParams(new LinearLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));
        titles = new ArrayList<String>();

        // Rpage.setTitle(chzz_news_roll_title, titles);//标题
        Rpage.setUriList(urlList);
        Rpage.startRoll();
        shop_viewpager.removeAllViews(); // 使用前先清除所有的内容view
        shop_viewpager.addView(Rpage);
    }

    // ===========滚动图片view=============
    private void initDot(int size) {
        dotList = new ArrayList<View>();
        dots_ll.removeAllViews();
        for (int i = 0; i < size; i++) {
            LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(CommonUtil.dip2px(getApplicationContext(), 6), CommonUtil.dip2px(
                    getApplicationContext(), 6));
            params.setMargins(5, 0, 5, 0);
            View m = new View(getApplicationContext());
            if (i == 0) {
                m.setBackgroundResource(R.drawable.dot_focus);
            } else {
                m.setBackgroundResource(R.drawable.dot_normal);
            }
            m.setLayoutParams(params);
            dots_ll.addView(m);
            dotList.add(m);
        }
    }

}
