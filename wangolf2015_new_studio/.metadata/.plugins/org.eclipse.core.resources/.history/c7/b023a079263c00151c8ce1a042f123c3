package me.wangolf.ballprac;

import java.util.List;

import com.lidroid.xutils.ViewUtils;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.meigao.mgolf.R;

import android.content.Intent;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.RelativeLayout;
import me.wangolf.ConstantValues;
import me.wangolf.adapter.BallNamesAdapter;
import me.wangolf.base.BaseActivity;
import me.wangolf.bean.ball.BallNameEntity;
import me.wangolf.factory.ServiceFactory;
import me.wangolf.service.IOAuthCallBack;
import me.wangolf.utils.GsonTools;
import me.wangolf.utils.ToastUtils;

public class BallnameActivity extends BaseActivity implements TextWatcher, OnItemClickListener, OnClickListener
{
	@ViewInject(R.id.list_name)
	private ListView list_name; // 列表
	
	@ViewInject(R.id.ed_ball_name)
	private EditText ed_ball_name;// 输入框
	
	@ViewInject(R.id.bt_back)
	private Button bt_back;
	
	@ViewInject(R.id.relayout)
	private RelativeLayout mRelayout;
	
	private String ballname;
	
	private BallNamesAdapter adapter;

	@Override
	protected void onCreate(Bundle savedInstanceState) 
	{
		super.onCreate(savedInstanceState);
		
		setContentView(R.layout.ac_ballname);
		
		ViewUtils.inject(this);
		
		if (adapter == null) 
		{
			adapter = new BallNamesAdapter(this);
		} 
		else 
		{
			adapter.notifyDataSetChanged();
		}
		
		list_name.setAdapter(adapter);
		
		list_name.setOnItemClickListener(this);
		
		bt_back.setOnClickListener(this);
		
		initData();
		
	}

	@Override
	public void initData() 
	{

		ed_ball_name.addTextChangedListener(this);

	}

	@Override
	public void getData() 
	{
		try {
			              
			ServiceFactory.getBallEngineInstatice().findBallList(ballname, new IOAuthCallBack() 
			{

				@Override
				public void getIOAuthCallBack(String result)
				{
					if (result.equals(ConstantValues.FAILURE)) 
					{
                        ToastUtils.showInfo(BallnameActivity.this,ConstantValues.NONETWORK);
					} 
					else 
					{
						BallNameEntity bean = GsonTools.changeGsonToBean(result, BallNameEntity.class);
						
						List<BallNameEntity.DataEntity> datas = bean.getData();
						
						if (datas.size()>0)
						{
							list_name.setVisibility(View.VISIBLE);
							
							mRelayout.setVisibility(View.GONE);
							
							adapter.setList(datas);
							
							adapter.notifyDataSetChanged();
							
						}
						else 
						{
							list_name.setVisibility(View.GONE);
							
							mRelayout.setVisibility(View.VISIBLE);
						}
					}
				}
			});
		} 
		catch (Exception e) 
		{
			e.printStackTrace();
		}

	}

	@Override
	public void afterTextChanged(Editable arg0) {

	}

	@Override
	public void beforeTextChanged(CharSequence arg0, int arg1, int arg2, int arg3) {

	}

	@Override
	public void onTextChanged(CharSequence arg0, int arg1, int arg2, int arg3) {
		ballname = ed_ball_name.getText().toString();
		getData();

	}

	@Override
	public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
		BallNameEntity bean = adapter.getItem(arg2);
		Intent in = new Intent();
		in.putExtra("ballbean", bean);
		setResult(ConstantValues.nameCode, in);
		finish();
	}

	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.bt_back:
			setResult(ConstantValues.nameCode);
			finish();
			break;
		default:
			break;
		}
	}
}
